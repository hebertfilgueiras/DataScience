Bancos de Dados MySQL - Linguagem SQL


# Conexão ao gerenciador de banco de dados 
# 1- Abra o prompt de comando ou terminal
# 2- Navegue até o diretório de binários (executáveis) do MySQL (isso vai depender de onde você instalou o MySQL e do seu sistema operacional)
# 3- No Windows seria: cd C:\Program Files\MySQL\MySQL Server 8.0\bin\
# 4- Depois execute:
mysql -u root -p

******************** ATENÇÃO ********************

# Caso receba a mensagem de erro:

Failed to connect to database: Error: Plugin caching_sha2_password could not be loaded

Execute este comando no prompt do MySQL:

ALTER USER 'username'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';

Por exemplo:

ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'newrootpassword';

****************************************

# Mostra todos os bancos de dados
show databases;

# Cria um banco de dados
CREATE DATABASE titanicDB;

# Habilita a sessão para o banco de dados
use titanicDB;

# Cria tabela
CREATE TABLE titanic (
	pclass		 char(3),
	survived		 char(1),   
	name		 varchar(100),
	sex			 char(6),
	age			 char(11),
	sibsp		 varchar(16),
	parch		 varchar(16),
	ticket		 varchar(20),		
	fare		 	 varchar(100),
	cabin		 varchar(16),
	embarked	 varchar(12),
	boat			 varchar(50),
	body		 varchar(32),
	home_dest	 varchar(200)
);	
	
# Carrega os dados do arquivo csv na tabela
# Altere o diretório para o local na sua máquina onde está o arquivo csv
# Para a versão mais nova do MySQL, será executar o comando abaixo e depois REINICIAR O SERVIÇO DO MYSQL:
SET GLOBAL local_infile = 'ON';

# Depois de reiniciar o serviço do MySQL, abra novamente o prompt ou terminal e digite (lembre-se de acessar o diretório de binários):
mysql -u root -p --local-infile

# Então digite no shell do MySQL:
use titanicDB;

LOAD DATA LOCAL INFILE 'Z:/Dropbox/DSA/BigDataAnalytics-R-Azure/Cap04/titanic.csv' 
INTO TABLE titanic 
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

# Instruções select
select name, age, sex, pclass from titanic where age > 70;
select name, age from titanic where age > 70;
select pclass, survived, avg(age) as media from titanic group by pclass, survived;


# Cria outro banco de dados
CREATE DATABASE cadastroDB;

# Habilita a sessão para o banco de dados
use cadastroDB;

# Cria tabela
CREATE TABLE FUNCIONARIOS(
   ID   INT              NOT NULL,
   NOME VARCHAR (20)     NOT NULL,
   IDADE  INT              NOT NULL,
   CIDADE  CHAR (25) ,
   SALARIO   DECIMAL (18, 2),       
   PRIMARY KEY (ID)
);

# Descreve a tabela
DESC FUNCIONARIOS;

# Instruções insert
INSERT INTO FUNCIONARIOS (ID,NOME,IDADE,CIDADE,SALARIO)
VALUES (1, 'Pele', 32, 'Roma', 2000.00 );

INSERT INTO FUNCIONARIOS (ID,NOME,IDADE,CIDADE,SALARIO)
VALUES (2, 'Zico', 25, 'Paris', 1500.00 );

INSERT INTO FUNCIONARIOS (ID,NOME,IDADE,CIDADE,SALARIO)
VALUES (3, 'Rivelino', 23, 'Santiago', 4000.00 );

INSERT INTO FUNCIONARIOS (ID,NOME,IDADE,CIDADE,SALARIO)
VALUES (4, 'Garrincha', 25, 'Vienna', 6500.00 );

INSERT INTO FUNCIONARIOS (ID,NOME,IDADE,CIDADE,SALARIO)
VALUES (5, 'Jair', 64, 'Vienna', 7800.00 );

# Esse registro gera erro de duplicidade
INSERT INTO FUNCIONARIOS (ID,NOME,IDADE,CIDADE,SALARIO)
VALUES (5, 'Careca', 25, 'Milao', 8900.00 );

INSERT INTO FUNCIONARIOS (ID,NOME,IDADE,CIDADE,SALARIO)
VALUES (6, 'Careca', 25, 'Milao', 8900.00 );

# Instruções select
select * from FUNCIONARIOS;

select nome, salario from FUNCIONARIOS;

SELECT ID, NOME, SALARIO 
FROM FUNCIONARIOS
WHERE SALARIO > 2000;


SELECT ID, NOME, SALARIO 
FROM FUNCIONARIOS
WHERE NOME = 'Zico';


SELECT ID, NOME, SALARIO 
FROM FUNCIONARIOS
WHERE SALARIO > 2000 AND IDADE < 55;


# Instrução Update
UPDATE FUNCIONARIOS
SET cidade = 'Boston'
WHERE ID = 6;

# Instrução Delete
DELETE FROM FUNCIONARIOS
WHERE ID = 6;

# Instruções select
select distinct cidade from FUNCIONARIOS;

select count(*) from FUNCIONARIOS;

select cidade, sum(salario) from FUNCIONARIOS group by cidade;

select cidade, sum(salario) from FUNCIONARIOS group by cidade having sum(salario) > 2000;

# Cria índice
create index cidade_idx on FUNCIONARIOS(cidade);

# Mostra os índices
SHOW INDEX FROM funcionarios;

# Cria uma tabela a partir de outra tabela
create table funcionarios_bkp
as select * from funcionarios;

select * from funcionarios_bkp;

# Remove a tabela
drop table funcionarios_bkp;

# Remove o banco de dados
drop database titanicDB;
drop database cadastroDB;






